# Example program
# factorial
import "basic.sbl";

fact {
    # duplicate and compare to zero
    ^ 0 ==;
    br {
        .@;
        # pop off to nothing, and push a 1
        .@ 1;
    }
    el {
        .@;
        .x       # pop into x
        x 1 -    # push a copy and subtract 1 from it
        fact     # call factorial
        x *;     # multiply whatever our factorial is by x
    }
}

square { ^ *; }

test-numbers {
    @;
    1 2 3 4 5;
    loop {
        fact println;
    }

    1 2 3 4 5;
    loop {
        square "value is " print println;
    }
    .@;
}

test-printing {
    @ '\n 'o 'l 'l 'e 'h;
    loop { print; }
    "world!" println;
}

test-booleans {
    5 ng .l l .r;
    l r ==;
    br {
        l print " == " print r println;
    }

    T;
    br {
        "br block" println;
        print " value is on top of the stack" println;
        .@;
    }
    F;
    br {} el {
        "el block" println;
        print " value is on top of the stack" println;
        .@;
    }
}

main {
    "testing number functions" println;
    test-numbers;

    "testing printing functions" println;
    test-printing;

    "testing booleans" println;
    test-booleans;

    $ print " items leftover on the stack" println;
}
